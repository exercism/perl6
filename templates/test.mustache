#!/usr/bin/env raku{{=#`{{ }}=}}#`{{! Mustache tags double up as Raku embedded comments}}
use Test;#`{{#cases}}
use JSON::Fast;#`{{/cases}}#`{{#modules}}
use #`{{&use}};#`{{/modules}}
use lib $?FILE.IO.dirname;#`{{#lib_comment}} #`[#`{{&lib_comment}}]#`{{/lib_comment}}
use #`{{&package}};#`{{#plan}}
plan #`{{&plan}};#`{{#plan_comment}} #`[#`{{&plan_comment}}]#`{{/plan_comment}}#`{{/plan}}
#`{{#methods}}#`{{#methods_comment}}
#`[#`{{&methods_comment}}]#`{{/methods_comment}}
subtest 'Class methods', {
  for <#`{{&methods}}> -> $method {
    can-ok #`{{&package}}, $method;
  }
} or bail-out 'Cannot run expected method(s).';
#`{{/methods}}#`{{#cases}}
my @test-cases = from-json($=pod[*-1].contents).List;#`{{/cases}}
#`{{&tests}}#`{{#catch_stub}}

CATCH {
  when X::StubCode {
    flunk 'Caught stub';
    note "{.message} (does the sub/method contain '!!!'?)\n"
      ~ .backtrace.concise;
  }
}#`{{/catch_stub}}#`{{#cases}}

=head2 Test Cases
=begin code
#`{{&cases}}
=end code#`{{/cases}}
