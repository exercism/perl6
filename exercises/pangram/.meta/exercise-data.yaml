plan: 10
tests: |-
  for @test-cases -> %case {
    subtest %case<description>, {
      plan 2;
      isa-ok ( my $result := is-pangram %case<input><sentence> ), Bool;
      is-deeply $result, %case<expected>, 'Result matches expected';
    }
  }

unit: module
example: |-
  sub is-pangram (Str:D $string --> Bool:D) is export {
    $string.lc.comb ⊇ ‘a’..‘z’
  }

stub: |-
  sub is-pangram ($string) is export {
  }
