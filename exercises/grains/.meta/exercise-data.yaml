exercise: Grains
plan: 2
tests: |-
  for $c-data<cases>.values {
    if .<cases> {
      subtest .<description> => {
        plan 10;
        for .<cases>.values {
          .<expected><error>
            ?? throws-like { grains-on-square(.<input><square>) }, Exception, .<description>
            !! is grains-on-square(.<input><square>), |.<expected description> if .<property> eq 'square';
        }
      }
    }
    elsif .<property> eq 'total' {
      is total-grains, |.<expected description>;
    }
  }

unit: module
example: |-
  sub grains-on-square ($number where * âˆˆ 1 .. 64) is export {
    2 ** ($number - 1);
  }

  sub total-grains is export {
    [+] map 1..64: *.&grains-on-square;
  }
