exercise: Hamming
plan: 9
tests: |-
  for @test-cases -> %case {
    given %case<expected> {
      when .<error>.so {
        throws-like
          { hamming-distance |%case<input><strand1 strand2> },
          Exception,
          message => /
            'left and right strands must be of equal length'
            || 'Constraint type check failed in binding to parameter'
          /,
          %case<description>;
      }

      default {
        is hamming-distance(|%case<input><strand1 strand2>),
          |%case<expected description>;
      }
    }
  }

unit: module
example: |-
  sub hamming-distance (
    +@strands where { .elems == 2 && [==] $_».chars } --> Int:D
  ) is export {
    [+] [Zne] @strands».comb;
  }
stub: |-
  sub hamming-distance ( $strand1, $strand2 ) is export {
  }
